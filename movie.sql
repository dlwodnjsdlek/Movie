drop user movie cascade;

create user movie identified by movie default tablespace users;
grant connect, resource to movie;

CREATE TABLE movie.USERS(
USER_NUM NUMBER CONSTRAINT USER_NUM_PK PRIMARY KEY,
USER_ID VARCHAR2(20) CONSTRAINT USER_ID_NN NOT NULL,
PW VARCHAR2(20) CONSTRAINT USER_PW_NN NOT NULL,
NICKNAME NVARCHAR2(8) CONSTRAINT USER_NICKNAME_NN NOT NULL,
PHONE_NUM VARCHAR2(13) CONSTRAINT USER_PHONE_NUM_NN NOT NULL,
EMAIL VARCHAR2(40) CONSTRAINT USER_EMAIL_NN NOT NULL);

CREATE TABLE movie.USER_WITHDRAWAL(
USER_NUM NUMBER, CONSTRAINT USER_WITHDRAWAL_NUM_FK FOREIGN KEY(USER_NUM) REFERENCES movie.USERS(USER_NUM));

CREATE TABLE movie.MOVIES(
MOVIE_NUM NUMBER CONSTRAINT MOVIE_NUM_PK PRIMARY KEY,
MOVIE_NAME VARCHAR2(100) CONSTRAINT MOVIE_NAME_NN NOT NULL,
MOVIE_COUNTRY VARCHAR2(100) CONSTRAINT MOVIE_COUNTRY_NN NOT NULL,
MOVIE_RELEASEDATE DATE CONSTRAINT MOVIE_RELEASEDATE_NN NOT NULL,
MOVIE_RUNNINGTIME NUMBER CONSTRAINT MOVIE_RUNNINGTIME_NN NOT NULL,
MOVIE_STORY VARCHAR2(2000) CONSTRAINT MOVIE_STORY_NN NOT NULL,
HASHTAG VARCHAR2(30) CONSTRAINT HASHTAG_NN NOT NULL,
CUMULATIVE_AUDIENCE NUMBER CONSTRAINT CUMULATIVE_AUDIENCE_NN NOT NULL,
MOVIE_IMGFILE_NAME VARCHAR2(100) CONSTRAINT MOVIE_IMGFILE_NAME_NN NOT NULL);

CREATE TABLE movie.GENRE(
GENRE_NUM NUMBER CONSTRAINT GENRE_NUM_PK PRIMARY KEY,
GENRE_NAME NVARCHAR2(10) CONSTRAINT GENRE_NAME_NN NOT NULL);

CREATE TABLE movie.USER_GENRE(
USER_NUM NUMBER, CONSTRAINT UG_NUM_FK FOREIGN KEY(USER_NUM) REFERENCES movie.USERS(USER_NUM),
GENRE_NUM NUMBER, CONSTRAINT GU_NUM_FK FOREIGN KEY(GENRE_NUM) REFERENCES movie.GENRE(GENRE_NUM));

CREATE TABLE movie.MOVIE_GENRE(
MOVIE_NUM NUMBER CONSTRAINT MG_NUM_FK REFERENCES movie.MOVIES(MOVIE_NUM),
GENRE_NUM NUMBER CONSTRAINT GM_NUM_FK REFERENCES movie.GENRE(GENRE_NUM));

CREATE TABLE movie.DIRECTORS(
DIRECTOR_NUM NUMBER CONSTRAINT DIRECTOR_NUM_PK PRIMARY KEY,
DIRECTOR_NAME VARCHAR2(15) CONSTRAINT DIRECTOR_NAME_NN NOT NULL,
DIRECTOR_IMGFILE_NAME VARCHAR2(100) CONSTRAINT DIRECTOR_IMGFILE_NAME_NN NOT NULL);

CREATE TABLE movie.MOVIE_DIRECTORS(
MOVIE_NUM NUMBER, CONSTRAINT MD_NUM_FK FOREIGN KEY(MOVIE_NUM) REFERENCES movie.MOVIES(MOVIE_NUM),
DIRECTOR_NUM NUMBER, CONSTRAINT DM_NUM_FK FOREIGN KEY(DIRECTOR_NUM) REFERENCES movie.DIRECTORS(DIRECTOR_NUM),
CONSTRAINT MOVIE_DIRECTORS_PK PRIMARY KEY(MOVIE_NUM, DIRECTOR_NUM));

CREATE TABLE movie.CAST(
CAST_NUM NUMBER CONSTRAINT CAST_NUM_PK PRIMARY KEY,
CAST_NAME VARCHAR2(15) CONSTRAINT CAST_NAME_NN NOT NULL,
CAST_IMGFILE_NAME VARCHAR2(100) CONSTRAINT CAST_IMGFILE_NAME_NN NOT NULL);

CREATE TABLE movie.MOVIE_CAST(
MOVIE_NUM NUMBER CONSTRAINT MC_NUM_FK REFERENCES movie.MOVIES(MOVIE_NUM),
CAST_NUM NUMBER CONSTRAINT CM_NUM_FK REFERENCES movie.CAST(CAST_NUM),
POSITION VARCHAR2(6) CONSTRAINT POSITION_NN NOT NULL,
CONSTRAINT MOVIE_CAST_PK PRIMARY KEY(MOVIE_NUM, CAST_NUM));

CREATE TABLE movie.REVIEWS(
REVIEW_NUM NUMBER CONSTRAINT REVIEW_NUM_PK PRIMARY KEY,
REVIEW_CONTENT VARCHAR2(1000) CONSTRAINT REVIEW_CONTENT_NN NOT NULL,
REVIEW_DATE DATE CONSTRAINT REVIEW_DATE_NN NOT NULL,
GRADE NUMBER CONSTRAINT GRADE_NN NOT NULL,
USER_NUM NUMBER, CONSTRAINT USER_REVIEW_NUM_FK FOREIGN KEY(USER_NUM) REFERENCES movie.USERS(USER_NUM),
MOVIE_NUM NUMBER, CONSTRAINT MOVIE_REVIEW_NUM_FK FOREIGN KEY(MOVIE_NUM) 
REFERENCES movie.MOVIES(MOVIE_NUM) ON DELETE CASCADE);

CREATE TABLE movie.REVIEW_REPLIES(
REVIEW_REPLY_NUM NUMBER CONSTRAINT REVIEW_REPLY_NUM_PK PRIMARY KEY,
REVIEW_REPLY_CONTENT VARCHAR2(1000) CONSTRAINT REVIEW_REPLY_CONTENT_NN NOT NULL,
REVIEW_REPLY_DATE DATE CONSTRAINT REVIEW_REPLY_DATE_NN NOT NULL,
USER_NUM NUMBER, CONSTRAINT USER_REVIEW_REPLIES_NUM_FK FOREIGN KEY(USER_NUM) REFERENCES movie.USERS(USER_NUM),
REVIEW_NUM NUMBER, CONSTRAINT REVIEW_REVIEW_REPLIES_NUM_FK FOREIGN KEY(REVIEW_NUM) 
REFERENCES movie.REVIEWS(REVIEW_NUM) ON DELETE CASCADE);

CREATE TABLE movie.COMMUNITIES(
COMMUNITY_NUM NUMBER CONSTRAINT COMMUNITY_NUM_PK PRIMARY KEY, 
COMMUNITY_TITLE NVARCHAR2(30) CONSTRAINT COMMUNITY_TITLE_NN NOT NULL,
COMMUNITY_CONTENT VARCHAR2(2000) CONSTRAINT COMMUNITY_CONTENT_NN NOT NULL,
COMMUNITY_DATE DATE CONSTRAINT COMMUNITY_DATE_NN NOT NULL,
USER_NUM NUMBER, CONSTRAINT COMMUNITY_USER_NUM_FK FOREIGN KEY(USER_NUM) REFERENCES movie.USERS(USER_NUM));

CREATE TABLE movie.COMMUNITY_REPLIES(
COMMUNITY_REPLY_NUM NUMBER CONSTRAINT CR_NUM_PK PRIMARY KEY, 
COMMUNITY_REPLY_CONTENT VARCHAR2(1000) CONSTRAINT CR_CONTENT_NN NOT NULL,
COMMUNITY_REPLY_DATE DATE CONSTRAINT CR_DATE_NN NOT NULL,
USER_NUM NUMBER, CONSTRAINT CR_USER_NUM_FK FOREIGN KEY(USER_NUM) REFERENCES movie.USERS(USER_NUM),
COMMUNITY_NUM NUMBER, CONSTRAINT CR_COMMUNITY_NUM_FK 
FOREIGN KEY(COMMUNITY_NUM) REFERENCES movie.COMMUNITIES(COMMUNITY_NUM) ON DELETE CASCADE);

CREATE TABLE movie.SYMPATHYS(
SYMPATHY_CONTENT_NUM NUMBER CONSTRAINT SC_NUM_PK PRIMARY KEY,
SYMPATHY_CONTENT_NAME VARCHAR2(9) CONSTRAINT SC_NAME_NN NOT NULL,
USER_NUM NUMBER, CONSTRAINT SYMPATHYS_USER_NUM_FK FOREIGN KEY(USER_NUM) REFERENCES movie.USERS(USER_NUM),
SYMPATHY_RECORD CHAR(2) CONSTRAINT SYMPATHY_RECORD_NN NOT NULL);

CREATE TABLE movie.INSPECTIONS(
INSPECTION_NUM NUMBER CONSTRAINT INSPECTION_NUM_PK PRIMARY KEY,
INSPECTION_CONTENT_NUM NUMBER CONSTRAINT IC_NUM_NN NOT NULL,
INSPECTION_CONTENT_NAME VARCHAR2(15) CONSTRAINT IC_NAME_NN NOT NULL,
INSPECTION_STATUS CHAR(1), /* CONSTRAINT INSPECTION_STATUS_NN NOT NULL, */
RESULT_DATE DATE);

CREATE TABLE movie.INSPECTION_DETAILS (
INSPECTION_DETAIL_NUM NUMBER CONSTRAINT INSPECTION_DETAIL_NUM_PK PRIMARY KEY,
INSPECTION_CONTENT VARCHAR2(1000) CONSTRAINT INSPECTION_CONTENT_NN NOT NULL,
USER_NUM NUMBER, CONSTRAINT INSDET_USER_NUM_FK FOREIGN KEY(USER_NUM) REFERENCES movie.USERS(USER_NUM), 
INSPECTION_NUM NUMBER, CONSTRAINT INSDET_INS_NUM_FK FOREIGN KEY(INSPECTION_NUM) REFERENCES movie.INSPECTIONS(INSPECTION_NUM));
 
CREATE SEQUENCE movie.user_num_seq;

CREATE SEQUENCE movie.movie_num_seq;

CREATE SEQUENCE movie.director_num_seq;

CREATE SEQUENCE movie.cast_num_seq;

CREATE SEQUENCE movie.genre_num_seq;

CREATE SEQUENCE movie.review_num_seq;

CREATE SEQUENCE movie.review_reply_num_seq;

CREATE SEQUENCE movie.community_num_seq;

CREATE SEQUENCE movie.community_reply_num_seq;

CREATE SEQUENCE movie.inspection_num_seq;

CREATE SEQUENCE movie.inspection_detail_num_seq;

CREATE SEQUENCE movie.sympathy_content_num_seq;

INSERT INTO movie.USERS(USER_NUM, USER_ID, PW, NICKNAME, PHONE_NUM, EMAIL)
VALUES(100, 'admin', 'admin', '包府磊包府磊', '010-1234-5678', 'admin@admin.com');

INSERT INTO movie.USERS(USER_NUM, USER_ID, PW, NICKNAME, PHONE_NUM, EMAIL)
VALUES(99, 'user', 'user', '蜡历蜡历', '010-8765-4321', 'user@user.com');

COMMIT;